syntax = "proto3";

package omas.v1;

//import "google/protobuf/empty.proto";
//import "google/protobuf/struct.proto";
//import "google/protobuf/wrappers.proto";
//import "google/protobuf/timestamp.proto";
//import "google/protobuf/duration.proto";
//import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/api/client.proto";
import "google/api/resource.proto";
//import "google/longrunning/operations.proto";

import "omas/type/location.proto";

option csharp_namespace = "Omas.Protos.V1";

service OmasLocationService {

    /* standard methods */

    //list printers (AIP-134)
	rpc ListLocations(ListLocationsRequest) returns (ListLocationsResponse) {
		option (google.api.http) = { 
			get: "/v1/locations" 
		};
		//option (google.api.method_signature) = "";
	}
}


message ListLocationsRequest {	

	//default: 50
	//maximum: 1000 
	int32  page_size = 2; 

	// the token of the previous pagination page
	string page_token = 3;

	//see: https://google.aip.dev/160
	//example: `country:at zone:1060 radius:50` query postal areas around middle of postalcode 1060 in 50km radius  
	//exmaple: `latLon:48.0427,14.4213 radius:50` query postal areas around middle of point in 50km radius  
	string filter = 6;

	//see: https://google.aip.dev/157
	//default: BASIC
	LocationView view = 8;

	//todo string order_by https://google.aip.dev/132#ordering
	//todo show_deleted https://google.aip.dev/132#soft-deleted-resources
}

message ListLocationsResponse {

	repeated omas.type.Location location = 1;

	//maybe int32 total_size = 2;
	string next_page_token = 3;

	//unreachable https://google.aip.dev/217
	repeated string unreachable = 4 [
		(google.api.field_behavior) = UNORDERED_LIST
	];
}

enum LocationView {
	LOCATION_VIEW_UNSPECIFIED = 0;

	//only postal code areas
	LOCATION_VIEW_BASIC = 1;

	//all available locations and fields
	LOCATION_VIEW_FULL = 15;
}